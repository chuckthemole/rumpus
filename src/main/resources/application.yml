# ------------------------------------------------------------
# Description:
# This file configures the Spring Boot application properties.
# It includes logging, management endpoints,
# and profile selection.
# Secrets (like passwords or API keys) should NOT be stored here.
# Use a separate secure properties file (e.g., properties.yml) instead.
# ------------------------------------------------------------

spring:
  # Set the active Spring profile.
  # You can override this with an environment variable 'env'.
  profiles:
    active: ${env:dev} # Default to 'dev' if no env variable is provided.

  config:
    import: classpath:properties/application-${spring.profiles.active}.yml

  # Optional output configuration for the console.
  output:
    ansi:
      enabled: ALWAYS # Enable ANSI colors in the console logs.

  # Devtools settings (commented out here)
  # devtools:
  #   restart:
  #     enabled: false  # Disable automatic restart in development if needed.

management:
  # Configuration for Spring Boot actuator endpoints
  endpoints:
    web:
      exposure:
        include:
          "*" # Expose all endpoints (health, metrics, etc.).
          # TODO: Remove or restrict this in production.
  info:
    env:
      enabled: true # Include environment info in the /actuator/info endpoint.

logging:
  # NOTE: Logging level is now determined per environment profile.
  #       See the profile-specific sections below.
  #
  # TODO: In the future, we should replace this with explicit
  #       environment variables like LOGGING_LEVEL_ROOT or
  #       LOGGING_LEVEL_APP for more granular control per service or module.

  # Path to the main log file. Adjust as needed for your deployment environment.
  # Note: The path we're using (./src/main/java/...) is inside source tree.
  # In production, logs usually go to something like:
  # file-name-pattern: ./logs/spring.log.%d{yyyy-MM-dd}.log
  file:
    name: ./src/main/java/com/rumpus/rumpus/log/spring.log

  logback:
    rollingpolicy:
      # Use a time-based rolling policy: a new log file is created each day.
      type: time-based

      # Naming pattern for rotated logs.
      # "%d{yyyy-MM-dd}" inserts the current date into the filename.
      # Example: spring.log.2025-09-20.log
      # Note: The path we're using (./src/main/java/...) is inside source tree.
      # In production, logs usually go to something like:
      # file-name-pattern: ./logs/spring.log.%d{yyyy-MM-dd}.log
      file-name-pattern: ./src/main/java/com/rumpus/rumpus/log/spring.log.%d{yyyy-MM-dd}.log

      # Keep only the most recent N log files.
      # Here, it keeps only 1 day of history — yesterday’s log is removed when a new one is created.
      max-history: 1

      # Optional: total cap on combined log file size.
      # If total logs exceed 100MB, older files are deleted regardless of max-history.
      total-size-cap: 100MB

      # With `max-history` + `total-size-cap`, logs are bounded and will not grow unbounded.
      # (TODO from your note) In production, it’s common to make max-history and
      # total-size-cap configurable via environment variables
      # (e.g., dev keeps 1 day, prod keeps 30 days)

# ------------------------------------------------------------
# OpenAPI / Swagger Configuration
# ------------------------------------------------------------
# Description:
#   Configures the auto-generated OpenAPI documentation for this service.
#   SpringDoc automatically scans your controllers and generates OpenAPI 3 docs.
#
# Access:
#   - JSON/OpenAPI spec: http://localhost:8080/v3/api-docs
#   - Swagger UI:        http://localhost:8080/api/docs
#
# Notes:
#   - The `/api/docs` path below can be changed to `/openapi`, `/api-docs`, etc.
#   - For production, you may wish to disable or restrict access to these endpoints.
#   - The title, version, and description shown in the UI can be set via
#     application properties (see below).
#
# TODO:
#   - Customize title/version to reflect the actual service.
#   - Consider using Spring Security to restrict documentation access in production.
springdoc:
  api-docs:
    # Enables or disables the OpenAPI JSON endpoint.
    enabled: true
    # Default path for the raw OpenAPI spec.
    path: /api/schema

  swagger-ui:
    # Path for the interactive Swagger UI.
    # Visit http://localhost:8888/api/docs while the app is running.
    path: /api/docs

  # Optional: metadata displayed in Swagger UI.
  # These values help document your API in a professional way.
  info:
    title: "Rumpus API"
    description: "RESTful API documentation for the Rumpus service."
    version: "v1.0"

  # Log output patterns
  pattern:
    # Console log format
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"

    # File log format
    file: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"

# ------------------------------------------------------------
# Environment-specific sections
# ------------------------------------------------------------

# Development profile settings
---
spring:
  config:
    activate:
      on-profile: dev

logging:
  level:
    # root: DEBUG
    # org.springframework.security: DEBUG
    # com.rumpus: DEBUG
    root: INFO
    org.springframework.security: INFO
    com.rumpus: INFO

# Production profile settings
---
spring:
  config:
    activate:
      on-profile: prod

logging:
  level:
    root: INFO
    org.springframework.security: INFO
    com.rumpus: INFO
