plugins {
    id 'rumpus'
    id 'common.aws' // TODO: look at common.gradle comment about this
	id 'org.springframework.boot' version '3.0.1' // look at this and the below plugin. newer versions have depreciated cors, csrf, and other security features for HttpSecurity. see WebSecurityConfig.java
	id 'io.spring.dependency-management' version '1.1.0'
    id 'org.siouan.frontend-jdk11' version '6.0.0'
}

sourceCompatibility = '17'

import EnvLoader
// --- Load environment variables from .env ---
EnvLoader.loadDotEnv(project)
def env = project.hasProperty("ENV") ? project.ENV : "DEV"
println "ðŸ“¦ Rumpus is using environment: ${env}"

repositories {
    gradlePluginPortal()
    mavenCentral()

    if (env == "LIVE") {
        maven {
            url = uri("https://maven.pkg.github.com/chuckthemole/common")
            credentials {
                username = project.findProperty("GPR_USER") ?: System.getenv("GPR_USER")
                password = project.findProperty("GPR_TOKEN") ?: System.getenv("GPR_TOKEN")
            }
        }
    } else if (env == "BETA") {
        maven {
            url = uri("$rootDir/TestRepo")
        }
    } else if (env == "DEV") {
        mavenLocal()
    }
}

// println "ENV value: '${env}'"
// println "ENV equals DEV: ${env == "DEV"}"
dependencies {
    if (env == "DEV") {
        println "ðŸ“¦ Rumpus is loading dependency :common"
        implementation(project(':common'))
    } else { // LIVE or BETA
        println "ðŸ“¦ Rumpus is loading dependency com.rumpushub.common:common"
        implementation "com.rumpushub.common:common:0.1.3" // update version as needed
    }
}

// https://stackoverflow.com/questions/45754005/include-tests-from-other-module
// TODO: I was looking in this stackoverflow and saw some interesting test things. Maybe look into later. 
// test {
//     dependsOn project(':common').tasks.named('test')
// }

frontend {
    nodeVersion = '14.17.3'
    // installScript = 'run install'
    assembleScript = 'run build'
    cleanScript = 'run clean'
    checkScript = 'run check'
    nodeInstallDirectory = file("${projectDir}/node")
    // packageJsonDirectory.set(file("${projectDir}/frontend"))
}


// * * * Tasks * * * 

import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpx
tasks.register('npxVersion', RunNpx) {
    // dependsOn tasks.named('installNode')
    // dependsOn tasks.named('installFrontend')
    script = '--version'
}
tasks.register('webpack', RunNpx) {
    // dependsOn tasks.named('installNode')
    // dependsOn tasks.named('installFrontend')
    script = 'webpack --config config/dev/webpack.config.js'
}
tasks.register('quill', RunNpx) {
    // dependsOn tasks.named('installNode')
    // dependsOn tasks.named('installFrontend')
    script = 'webpack --config config/dev/quill.config.js'
}

import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpm
tasks.register('bulma', RunNpm) {
    // dependsOn tasks.named('installNode')
    // dependsOn tasks.named('installFrontend')
    script = 'install bulma'
}